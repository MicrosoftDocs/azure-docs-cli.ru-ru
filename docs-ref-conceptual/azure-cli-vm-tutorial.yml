### YamlMime:Tutorial
title: Создание виртуальных машин с помощью Azure CLI
metadata:
  title: Создание виртуальных машин с помощью Azure CLI
  description: Начните создавать виртуальные машины с помощью Azure CLI 2.0.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurecli
  ms.date: 07/09/2018
  ms.author: dbradish
  author: dbradish-microsoft
  manager: barbkess
  ms.devlang: azure-cli
  ms.topic: tutorial
  ms.prod: azure
  ms.technology: azurecli
  clicktale: true
  ms.openlocfilehash: fb231b99b0f25760b84683d160a63e62c4f36276
  ms.sourcegitcommit: 18973ac471bbd12af2c8f8fa32a233b0abe5b020
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/13/2020
  ms.locfileid: "75913612"
items:
- durationInMinutes: 1
  content: >-
    В этом руководстве описано, как настроить виртуальную машину с помощью Azure CLI. Вы также узнаете, как создавать запросы выходных данных, повторно использовать ресурсы Azure и очищать ресурсы.


    Для работы с этим руководством вам понадобится интерактивная служба Azure Cloud Shell или вы можете [установить CLI](install-azure-cli.md) локально.


    Используйте клавиши __CTRL+SHIFT+V__ (__CMD+SHIFT+V__ в macOS), чтобы вставить текст руководства в Azure Cloud Shell.
- durationInMinutes: 1
  title: Вход
  content: "Если вы используете локальную установку CLI, вам нужно войти в систему, прежде чем выполнять какие-либо действия.\n\n```azurecli-interactive\naz login\n```\n\nВыполните аутентификацию, следуя инструкциям в окне терминала. "
- durationInMinutes: 1
  title: Создание группы ресурсов
  content: >-
    В Azure все ресурсы включаются в одну группу управления ресурсами. Эти группы обеспечивают логическое объединение ресурсов, позволяя работать с ними как с коллекцией. В этом руководстве все созданные ресурсы помещаются в одну группу с именем `TutorialResources`.


    ```azurecli

    az group create --name TutorialResources --location eastus

    ```
- durationInMinutes: 4
  title: Создание виртуальной машины
  content: "Виртуальные машины в Azure имеют большое число зависимостей. CLI создает эти ресурсы на основе указанных аргументов командной строки.\n\nСоздайте виртуальную машину под управлением Ubuntu, которая использует аутентификацию на основе SSH для входа.\n\n```azurecli-interactive\naz vm create --resource-group TutorialResources \\\n  --name TutorialVM1 \\\n  --image UbuntuLTS \\\n  --generate-ssh-keys \\\n  --output json \\\n  --verbose \n```\n\n> [!NOTE]\n> Если у вас уже есть ключ SSH с именем `id_rsa`, для аутентификации будет использоваться он, а не создаваемый заново ключ.\n\nПри создании виртуальной машины с помощью параметра `--verbose` отображаются используемые локальные значения ресурсов и создаваемые ресурсы Azure.\nКогда виртуальная машина будет создана, служба Azure возвращает данные JSON, включая общедоступный IP-адрес.\n\n```json\n{\n  \"fqdns\": \"\",\n  \"id\": \"...\",\n  \"location\": \"eastus\",\n  \"macAddress\": \"...\",\n  \"powerState\": \"VM running\",\n  \"privateIpAddress\": \"...\",\n  \"publicIpAddress\": <PUBLIC_IP_ADDRESS>,\n  \"resourceGroup\": \"TutorialResources\",\n  \"zones\": \"\"\n}\n```\n\nУбедитесь, что виртуальная машина запущена, подключившись по протоколу SSH.\n\n```bash\nssh <PUBLIC_IP_ADDRESS>\n```\n\nЗатем выйдите из виртуальной машины.\n\nЕсть и другие способы получения этого IP-адреса после запуска виртуальной машины. В следующем разделе вы увидите, как получить и отфильтровать подробные сведения о виртуальной машине."
- durationInMinutes: 3
  title: Получение сведений о виртуальной машине с помощью запросов
  content: "Вы можете получить подробные сведения о созданной виртуальной машине. Используемая команда для получения сведений из ресурса — это `show`.\n\n```azurecli-interactive\naz vm show --name TutorialVM1 --resource-group TutorialResources\n```\n\nВы увидите большой объем данных, которые может быть сложно изучить. Возвращаемые данные JSON содержат сведения об аутентификации, сетевых интерфейсах, хранении и многом другом. Самое главное — они содержат идентификаторы объектов Azure для ресурсов, подключенных к виртуальной машине. Идентификаторы объектов обеспечивают непосредственный доступ к этим ресурсам для получения дополнительных сведений о конфигурации и возможностях виртуальной машины. \n\nИзвлечь нужный идентификатор объекта можно с помощью аргумента `--query`. Запросы написаны на [языке запросов JMESPath](http://jmespath.org). Начните с получения идентификатора объекта для адаптера сетевого интерфейса.\n\n```azurecli-interactive\naz vm show --name TutorialVM1 \\\n  --resource-group TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  --output tsv\n```\n\nПосле добавления запроса происходит много действий. Каждая часть запроса ссылается на ключ в выходных данных JSON или является оператором JMESPath.\n\n* `networkProfile` — это ключ JSON верхнего уровня с `networkInterfaces` в качестве вложенного ключа. Если значение JSON является словарем, на его ключи ссылается родительский ключ с помощью оператора `.`.\n* Значение `networkInterfaces` — это массив, поэтому оно преобразовывается в плоскую структуру с помощью оператора `[]`. Этот оператор выполняет остальную часть запроса к каждому элементу массива. В этом случае он возвращает значение `id` каждого элемента массива.\n\nФормат выходных данных `tsv` (значение с разделением знаками табуляции) гарантированно включают только данные результатов и пробелы (знаки табуляции и символы новой строки).\nТак как возвращаемое значение является простой строкой, выполнять назначение непосредственно переменной среды безопасно.\n\nТеперь мы назначим идентификатор объекта адаптера сетевого интерфейса переменной среды.\n\n```bash\nNIC_ID=$(az vm show -n TutorialVM1 -g TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  -o tsv)\n```\n\nВ этом примере также показано использование коротких аргументов. Вы можете использовать `-g` вместо `--resource-group`, `-n` вместо `--name` и `-o` вместо `--output`."
- durationInMinutes: 4
  title: Настройка переменных среды из выходных данных CLI
  content: >-
    Теперь, когда у вас есть идентификатор адаптера сетевого интерфейса, выполните `az network nic show` для получения связанных данных. Здесь не нужно указывать группу ресурсов, так как имя группы ресурсов содержится в идентификаторе ресурса Azure.


    ```azurecli-interactive

    az network nic show --ids $NIC_ID

    ```



    Эта команда выводит все данные сетевого интерфейса виртуальной машины. Эти данные включают параметры DNS, сведения об IP-конфигурации, параметры безопасности и MAC-адрес. Теперь вам нужно получить общедоступный IP-адрес и идентификаторы объектов подсети.


    ```azurecli-interactive

    az network nic show --ids $NIC_ID \
      --query '{IP:ipConfigurations[].publicIpAddress.id, Subnet:ipConfigurations[].subnet.id}' \
      -o json
    ```


    ```json

    {
      "IP": [
        "/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/publicIPAddresses/TutorialVM1PublicIP"
      ],
      "Subnet": [
        "/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/virtualNetworks/TutorialVM1VNET/subnets/TutorialVM1Subnet"
      ]
    }

    ```


    Эта команда отображает объект JSON, который содержит пользовательские ключи ("IP-адрес" и "Подсеть") для извлеченных значений. Хотя такой подход к выводу данных может быть неподходящим для программ командной строки, он упрощает восприятие информации для пользователя и может использоваться с пользовательскими скриптами.


    Чтобы использовать программы командной строки, измените команду, чтобы удалить пользовательские ключи JSON и выходные данные как `tsv`. Такой подход к выводу данных предусматривает обработку с помощью команды `read` оболочки для загрузки результатов в несколько переменных. Так как отображаются два значения в отдельных строках, для разделителя команды `read` необходимо задать пустую строку, а не стандартные пробелы, отличные от символов новой строки.


    ```bash

    read -d '' IP_ID SUBNET_ID <<< $(az network nic show \
      --ids $NIC_ID \
      --query '[ipConfigurations[].publicIpAddress.id, ipConfigurations[].subnet.id]' \
      -o tsv)
    ```


    Идентификатор подсети не будет использоваться прямо сейчас, но его необходимо сохранить, чтобы не выполнять вторую операцию поиска позже. Теперь используйте идентификатор объекта общедоступного IP-адреса для поиска общедоступного IP-адреса и сохраните его в переменной оболочки.


    ```bash

    VM1_IP_ADDR=$(az network public-ip show --ids $IP_ID \
      --query ipAddress \
      -o tsv)
    ```


    Теперь у вас есть IP-адрес виртуальной машины, хранящийся в переменной оболочки. Затем убедитесь в том, что это то значение, которое использовалось для исходного подключения к виртуальной машине.


    ```bash

    echo $VM1_IP_ADDR

    ```
- durationInMinutes: 2
  title: Создание виртуальной машины в существующей подсети
  content: >-
    Вторая виртуальная машина использует существующую подсеть. Вы можете пропустить несколько шагов, чтобы получить общедоступный IP-адрес новой виртуальной машины, хранящийся в переменной среды прямо сейчас, так как он возвращается с данными о создании виртуальной машины. Если позже вам понадобятся другие сведения о виртуальной машине, вы сможете получить их с помощью команды `az vm show`.


    ```bash

    VM2_IP_ADDR=$(az vm create -g TutorialResources \
      -n TutorialVM2 \
      --image UbuntuLTS \
      --generate-ssh-keys \
      --subnet $SUBNET_ID \
      --query publicIpAddress \
      -o tsv)
    ```


    Используйте хранимый IP-адрес, чтобы подключиться по SSH к созданной виртуальной машине.


    ```bash

    ssh $VM2_IP_ADDR

    ```


    Затем выйдите из виртуальной машины.
- durationInMinutes: 2
  title: Очистка
  content: >-
    Теперь, когда вы завершили работу с этим руководством, можно очистить созданные ресурсы. Вы можете удалить отдельные ресурсы с помощью команды `delete`. Но безопаснее будет удалить все ресурсы в группе ресурсов с помощью `group delete`.


    ```azurecli-interactive

    az group delete --name TutorialResources --no-wait

    ```


    Эта команда удаляет ресурсы, созданные при работе с руководством, и гарантированно удаляет их в правильном порядке. Параметр `--no-wait` предотвращает блокировку CLI в ходе удаления. Если вы хотите дождаться завершения процесса или наблюдать ход его выполнения, используйте команду `group wait`.


    ```azurecli-interactive

    az group wait --name TutorialResources --deleted

    ```


    Очистка ресурсов — это последнее действие в рамках этого руководства. Теперь еще раз вкратце повторите все, о чем вы узнали. Также вы можете воспользоваться ссылками на ресурсы, которые помогут вам перейти к дальнейшим действиям.
- durationInMinutes: 1
  title: Сводка
  content: >-
    Поздравляем! Вы узнали, как создавать виртуальные машины с новыми или существующими ресурсами, использовать аргументы `--query` и `--output` для записи данных в переменные оболочки, а также выполнять поиск некоторых ресурсов, которые создаются для виртуальных машин Azure.


    Ваши дальнейшие действия будут зависеть от того, для чего вы планируете использовать CLI. Доступно множество материалов, которые подробно описывают использование компонентов, рассматриваемых в этом руководстве.


    ### <a name="samples"></a>Примеры


    Если вы хотите начать работу с определенными задачами прямо сейчас, изучите некоторые примеры скриптов.


    * Работа с виртуальными машинами [Linux](/azure/virtual-machines/linux/cli-samples?toc=%2fcli%2fazure%2ftoc.json) и [Windows](/azure/virtual-machines/windows/cli-samples?toc=%2fcli%2fazure%2ftoc.json).

    * Работа с [веб-приложениями[ и ](/azure/azure-functions/functions-cli-samples?toc=%2fcli%2fazure%2ftoc.json)Функциями Azure](/azure/app-service/app-service-cli-samples?toc=%2Fcli%2Fazure%2Ftoc.json).

    * Работа с базами данных [SQL Azure](/azure/sql-database/sql-database-cli-samples?toc=%2fcli%2fazure%2ftoc.json), [PostgreSQL](/azure/postgresql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json), [MySQL](/azure/mysql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json) и [Cosmos DB](/azure/cosmos-db/cli-samples?toc=%2fcli%2fazure%2ftoc.json).


    ### <a name="in-depth-cli-documentation"></a>Подробная документация по CLI


    Ниже также приведены ссылки с подробным описание функций CLI, рассматриваемых в этом руководстве.


    * Дополнительные сведения о [форматах вывода](format-output-azure-cli.md).

    * Дополнительные сведения о [запросах выходных данных](query-azure-cli.md).

    * Ознакомьтесь с дополнительными сведениями об [авторизации в Azure](authenticate-azure-cli.md).


    ### <a name="other-useful-documentation"></a>Другая полезная документация


    Кроме того, вы можете ознакомиться с такими дополнительными функциями CLI, как [настройка значений по умолчанию](azure-cli-configuration.md) или [расширения](azure-cli-extensions-overview.md).


    ### <a name="feedback"></a>Отзывы


    Если вы хотите оставить отзыв, поделиться предложениями или задать вопросы по CLI, вы можете связаться с нами разными способами.


    * `az feedback` — это встроенная команда CLI, которая позволяет отправить отзыв команде в свободной форме.

    * Создать запрос на добавление возможности или сообщить об ошибке в CLI можно в [репозитории Azure CLI](https://github.com/Azure/azure-cli).

    * Кроме того, вы можете задать вопрос или получить разъяснение в [репозитории документации Azure CLI](https://github.com/MicrosoftDocs/azure-docs-cli/issues).


    Мы надеемся, что вам понравится работать с Azure CLI!
